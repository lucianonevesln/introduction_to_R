print(var_integer_to_numeric)
class(var_integer_to_numeric)
typeof(var_integer_to_numeric)
print('-------------------------')
print(var_complex_to_numeric)
class(var_complex_to_numeric)
typeof(var_complex_to_numeric)
print('-------------------------')
var_complex_to_integer <- 1000i
var_numeric_to_integer <- 1000.1
print('-------------------------')
print(var_complex_to_integer)
class(var_complex_to_integer)
typeof(var_complex_to_integer)
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
as.integer(var_complex_to_integer)
as.integer(var_numeric_to_integer)
print('-------------------------')
print(var_complex_to_integer)
class(var_complex_to_integer)
typeof(var_complex_to_integer)
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
var_numeric_to_integer <- 1000.1
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
as.integer(var_numeric_to_integer)
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
var_integer_to_complex <- 1000.0
var_numeric_to_complex <- 1000
print('-------------------------')
print(var_integer_to_complex)
class(var_integer_to_complex)
typeof(var_integer_to_complex)
print('-------------------------')
print(var_numeric_to_complex)
class(var_numeric_to_complex)
typeof(var_numeric_to_complex)
print('-------------------------')
as.complex(var_integer_to_complex)
as.complex(var_numeric_to_complex)
print('-------------------------')
print(var_integer_to_complex)
class(var_integer_to_complex)
typeof(var_integer_to_complex)
print('-------------------------')
print(var_numeric_to_complex)
class(var_numeric_to_complex)
typeof(var_numeric_to_complex)
print('-------------------------')
multplicar <- 10 * 10
print(multplicar)
dividir <- 10 / 5
print(dividir)
somar <- 50 + 50
print(somar)
subtrair <- 100 - 50
print(subtrair)
dividir_resto <- 15 % 2
dividir_resto <- 15 %% 2
print(dividir_resto)
dividir_resto_par <- 14 %% 2
dividir_resto_impar <- 15 %% 2
print(dividir_resto_par)
print(dividir_resto_impar)
dividir_resto_par <- 14 %% 2
dividir_resto_impar <- 15 %% 2
print(dividir_resto_par)
print(dividir_resto_impar)
funcao_max <- max(1, 2, 3, 4, 5)
print(funcao_max)
funcao_max <- max(1, 2, 3, 4, 5)
print(funcao_max)
funcao_min <- max(1, 2, 3, 4, 5)
print(funcao_min)
funcao_min <- min(1, 2, 3, 4, 5)
print(funcao_min)
funcao_abs <- abs(-100)
print(funcao_abs)
funcao_sqrt <- sqrt(10, 2)
print(funcao_sqrt)
funcao_sqrt <- sqrt(25)
print(funcao_sqrt)
funcao_ceiling <- ceiling(10.5)
print(funcao_ceiling)
funcao_floor <- floor(10.5)
print(funcao_floor)
texto <- "Este é um exemplo de texto:
aqui, você pode ver como um
texto pode ser armazenado em
uma variável."
print(texto)
cat(texto)
nchar(texto)
grepl("Este é um exemplo de texto:", texto)
grepl("Esse trecho existe?", texto)
exponenciar <- 10 ^ 2
print(exponenciar)
dividir_inteiros <- 10 %/% 2
dividir_inteiros
var_x <- 10
var_y <- 10
print(var_y == var_x)
var_x <- 10
var_y <- 10
print(var_x == var_y)
var_x <- 5
var_y <- 8
print(var_x != var_y)
var_x <- 5
var_y <- 10
print(var_x > var_y)
var_x <- 10
var_y <- 5
print(var_x < var_y)
var_x <- 15
var_y <- 15
print(var_x >= var_y)
var_x <- 30
var_y <- 25
print(var_x <= var_y)
if (var_x & var_y, TRUE)
if (var_x & var_y) {TRUE}
if (var_x && var_y) {TRUE}
if (var_x == 30 & var_y == 25) {TRUE}
if (var_x == 30 & var_y == 30) {TRUE}
if (var_x == 30 & var_y == 30) {TRUE}
var_x <- 30
var_y <- 25
if (var_x == 30 & var_y == 30) {TRUE}
if (var_x == 30 & var_y == 30) {print(TRUE)}
if (var_x == 30 & var_y == 25) {print(TRUE)}
if (var_x == 30 & var_y == 25) {
print(TRUE)
}
var_x <- 30
var_y <- 25
if (var_x == 30 && var_y == 25) {
print(TRUE)
}
if (var_x == 25 && var_y == 30) {
print(TRUE)
}
if (var_x == 25 && var_y == 30) {
print(TRUE)
} else {
print(FALSE)
}
var_x <- 30
var_y <- 25
if (var_x == 25 | var_y == 25) {
print(TRUE)
} else {
print(FALSE)
}
if (var_x == 25 || var_y == 30) {
print(TRUE)
} else {
print(FALSE)
}
true <- TRUE
false <- FALSE
print(!true)
print(!false)
var <- 1:10
for (i in 1:var) {
print("teste")
}
for (i in 1:var) {
print(var)
}
print(var)
var <- 1:10
print(5 %in% var)
vetor_1 <- 1:16
vetor_2 <- 16:1
matrix_1 <- matrix(4, 4)
matrix_1 <- matrix(vetor_1, 4, 4)
matrix_2 <- matrix(vetor_2, 4, 4)
print(matrix_1)
print(matrix_2)
print(matrix_1 %*% matrix_2)
vetor_1 <- 1:16
vetor_2 <- 1:16
matrix_1 <- matrix(vetor_1, 4, 4)
matrix_2 <- matrix(vetor_2, 4, 4)
print(matrix_1)
print(matrix_2)
print(matrix_1 %*% matrix_2)
var_1 <- 'elemento1'
var_2 <- 'elemento2'
if (var_1 != var_2) {
print('Os elementos são iguais')
}
var_1 <- 'elemento1'
var_2 <- 'elemento2'
if (var_1 == var_2) {
print('Os elementos são iguais')
} else {
print("Os elementos são diferentes")
}
if (var_1 == var_2) {
print('Os elementos são iguais')
} else if (var_1 != var_2) {
print("Os elementos não são iguais")
}
print('Hello World!')
contador <- 10
print('Hello World!')
var1 <- var2 <- var3 <- "Estou presente em várias variáveis"
for (i in 1:5) {
print(var1)
print(var2)
print(var3)
print(paste('Execução: ', contador))
contador <- contador + 1
}
contador <- 10
for (i in 1:5) {
print(var1)
print(var2)
print(var3)
print(paste('Execução: ', contador))
contador <- contador + 1
}
contador <- 5
for (i in 1:contador) {
print(var1)
print(var2)
print(var3)
print(paste('Execução: ', contador))
contador <- contador + 1
}
contador <- 1
for (i in 1:5) {
print(var1)
print(var2)
print(var3)
print(paste('Execução: ', contador))
contador <- contador + 1
}
dataType1 <- c(1.1, 2.2, 3.3)
print(dataType1)
class(dataType1)
typeof(dataType1)
dataType2 <- c(1L, 2L, 3L)
print(dataType2)
class(dataType2)
typeof(dataType2)
dataType3 <- c(9 + 3i)
print(dataType3)
class(dataType3)
typeof(dataType3)
dataType4 <- "Este é um exemplo de character (string) em R"
print(dataType4)
class(dataType4)
typeof(dataType4)
dataType5_1 <- TRUE
dataType5_2 <- FALSE
print(dataType5_1)
class(dataType5_1)
typeof(dataType5_1)
print(dataType5_2)
class(dataType5_2)
typeof(dataType5_2)
var1 <- 10.10
var2 <- 10
print(var1)
class(var1)
typeof(var1)
print(var2)
class(var2)
typeof(var2)
var3 <- 100L
print(var3)
class(var3)
typeof(var3)
var4 <- 1000i
print(var4)
class(var4)
typeof(var4)
var_integer_to_numeric <- 100L
var_complex_to_numeric <- 1000i
print('-------------------------')
print(var_integer_to_numeric)
class(var_integer_to_numeric)
typeof(var_integer_to_numeric)
print(var_complex_to_numeric)
class(var_complex_to_numeric)
typeof(var_complex_to_numeric)
print('-------------------------')
var_integer_to_numeric <- as.numeric(var_integer_to_numeric)
var_complex_to_numeric <- as.numeric(var_complex_to_numeric)
print('-------------------------')
print(var_integer_to_numeric)
class(var_integer_to_numeric)
typeof(var_integer_to_numeric)
print('-------------------------')
print(var_complex_to_numeric)
class(var_complex_to_numeric)
typeof(var_complex_to_numeric)
print('-------------------------')
var_numeric_to_integer <- 1000.1
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
as.integer(var_numeric_to_integer)
print('-------------------------')
print(var_numeric_to_integer)
class(var_numeric_to_integer)
typeof(var_numeric_to_integer)
print('-------------------------')
multplicar <- 10 * 10
print(multplicar)
dividir <- 10 / 5
print(dividir)
somar <- 50 + 50
print(somar)
subtrair <- 100 - 50
print(subtrair)
dividir_resto_par <- 14 %% 2
dividir_resto_impar <- 15 %% 2
print(dividir_resto_par)
print(dividir_resto_impar)
dividir_inteiros <- 10 %/% 2
dividir_inteiros
exponenciar <- 10 ^ 2
print(exponenciar)
funcao_max <- max(1, 2, 3, 4, 5)
print(funcao_max)
funcao_min <- min(1, 2, 3, 4, 5)
print(funcao_min)
funcao_abs <- abs(-100)
print(funcao_abs)
funcao_sqrt <- sqrt(25)
print(funcao_sqrt)
funcao_ceiling <- ceiling(10.5)
print(funcao_ceiling)
funcao_floor <- floor(10.5)
print(funcao_floor)
texto <- "Este é um exemplo de texto:
aqui, você pode ver como um
texto pode ser armazenado em
uma variável."
print(texto)
cat(texto) # mostra o texto de forma organizada
nchar(texto) # mostra a quantidade de caracteres existentes no texto
grepl("Este é um exemplo de texto:", texto) # verifica se uma letra ou sequência de caracteres existe no texto, retornando TRUE ou FALSE
grepl("Esse trecho existe?", texto)
var_x <- 10
var_y <- 10
print(var_x == var_y)
var_x <- 5
var_y <- 8
print(var_x != var_y)
var_x <- 5
var_y <- 10
print(var_x > var_y)
var_x <- 10
var_y <- 5
print(var_x < var_y)
var_x <- 15
var_y <- 15
print(var_x >= var_y)
var_x <- 30
var_y <- 25
print(var_x <= var_y)
var_x <- 30
var_y <- 25
if (var_x == 30 & var_y == 25) {
print(TRUE)
}
var_x <- 30
var_y <- 25
if (var_x == 25 && var_y == 30) {
print(TRUE)
} else {
print(FALSE)
}
var_x <- 30
var_y <- 25
if (var_x == 25 | var_y == 25) {
print(TRUE)
} else {
print(FALSE)
}
var_x <- 30
var_y <- 25
if (var_x == 25 || var_y == 30) {
print(TRUE)
} else {
print(FALSE)
}
true <- TRUE
false <- FALSE
print(!true)
print(!false)
var <- 1:10
print(var)
var <- 1:10
print(5 %in% var)
vetor_1 <- 1:16
vetor_2 <- 1:16
matrix_1 <- matrix(vetor_1, 4, 4)
matrix_2 <- matrix(vetor_2, 4, 4)
print(matrix_1)
print(matrix_2)
print(matrix_1 %*% matrix_2)
var_1 <- 'elemento1'
var_2 <- 'elemento1'
if (var_1 == var_2) {
print('Os elementos são iguais')
}
var_1 <- 'elemento1'
var_2 <- 'elemento2'
if (var_1 == var_2) {
print('Os elementos são iguais')
} else {
print("Os elementos são diferentes")
}
var_1 <- 'elemento1'
var_2 <- 'elemento2'
if (var_1 == var_2) {
print('Os elementos são iguais')
} else if (var_1 != var_2) {
print("Os elementos não são iguais")
}
for (i in 1:10) {
print('Hello World')
}
contador <- 10
for (i in 1:contador) {
print('Hello World')
}
hello <- "Hello World"
for (i in 1:contador) {
print(hello)
}
for (i in 1:10) {
print('Hello World')
}
for (i in 1:10) {
print('Hello World')
}
hello <- "Hello World"
for (i in 1:contador) {
print(hello)
}
name <- "Luciano Neves"
age  <- 32
contador <- 0
while (contador <= 10) {
print(name)
print(age)
contador <- contador + 1
}
typeof(contador)
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
}
contador <- 10
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
}
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
contador <- contador + 1
}
contador <- 10
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
contador <- contador + 1
}
contador <- 0
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
contador <- contador + 1
}
contador <- 1
while (contador <= 10) {
print(name)
print(age)
contador <- contador + 1
}
contador <- 1
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
contador <- contador + 1
}
name <- "Luciano Neves"
age  <- 32
contador <- 1
while (contador <= 10) {
print(paste('Olá, ', name, '. Você tem ', age, ' de idade.'))
contador <- contador + 1
}
